# 사전형, Dict

# 사전형 생성
bans = { '잎새반':'찬영이',
         '열매반':'예영이',
         '햇살반':'준영이',
         '열매반':'채영이'}

print(type(bans))
print('반의 수 : ', len(bans))

    # <class 'dict'>
    # 반의 수 :  3


# 읽기
print('잎새반 : ', bans['잎새반'])
print('열매반 : ', bans['열매반'])
print('bans 읽기 :', bans)

    # 잎새반 :  찬영이
    # 열매반 :  채영이
        # 주의할 점! => 사전형의 특징은 순서가 상관이 없다는 점이다. 그렇지만, 결과값이 채영이가 나온 것에서 알 수 있듯이
        # 파이썬 자체의 처리순서는 항상 위에서부터이기 때문에, 사전형 안에 '열매반'이라는 key에 '예영이'라는 값을 먼저 처리한 이후
        # 새롭게 '열매반'이라는 key값이 또 나온 경우에는 key 값 자체는 중복이 허용되지 않으므로 그대로 가지만, '채영이'라는 '값'은 덮어쓰는 것이다.
    # bans 읽기 : {'잎새반': '찬영이', '열매반': '채영이', '햇살반': '준영이'}


# 추가
bans['꽃잎반'] = '희영이'
print('bans 추가 :', bans)

    # bans 추가 : {'잎새반': '찬영이', '열매반': '채영이', '햇살반': '준영이', '꽃잎반': '희영이'}

# 변경
bans['잎새반'] = '서영이'
print('bans 변경 :', bans)

    # bans 변경 : {'잎새반': '서영이', '열매반': '채영이', '햇살반': '준영이', '꽃잎반': '희영이'}


# 삭제
del bans['햇살반']
print('bans 삭제 :', bans)

    # bans 삭제 : {'잎새반': '서영이', '열매반': '채영이', '꽃잎반': '희영이'}
